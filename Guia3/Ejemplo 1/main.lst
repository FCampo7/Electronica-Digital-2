CCS PCM C Compiler, Version 5.076, 56587               29-sep.-20 15:08

               Filename:   C:\Users\Francisco\Documents\!Facultad - UF\Electrónica Digital II\Ejercicios\Guia3\Ejemplo 1\main.lst

               ROM used:   82 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   036
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.4
001B:  GOTO   01E
001C:  BTFSC  0B.1
001D:  GOTO   02F
001E:  MOVF   22,W
001F:  MOVWF  04
0020:  MOVF   23,W
0021:  MOVWF  77
0022:  MOVF   24,W
0023:  MOVWF  78
0024:  MOVF   25,W
0025:  MOVWF  79
0026:  MOVF   26,W
0027:  MOVWF  7A
0028:  MOVF   27,W
0029:  MOVWF  0A
002A:  SWAPF  21,W
002B:  MOVWF  03
002C:  SWAPF  7F,F
002D:  SWAPF  7F,W
002E:  RETFIE
002F:  BCF    0A.3
0030:  GOTO   031
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
....................  
.................... #fuses XT, NOWDT, PUT, NOWRT 
.................... #use delay (clock = 4000000) 
.................... #use fast_io(B) 
....................  
.................... int1 cambio = 0; // variable de cambio 
....................  
.................... #INT_EXT // Atención a interrupción por cambio en RB0 
....................  
.................... ext_isr(){ //Función de interrupción 
.................... 	output_toggle(PIN_B7); 
0031:  MOVLW  80
0032:  XORWF  06,F
0033:  BCF    0B.1
0034:  BCF    0A.3
0035:  GOTO   01E
.................... } 
.................... void main(){ 
0036:  MOVF   03,W
0037:  ANDLW  1F
0038:  MOVWF  03
0039:  BCF    28.0
003A:  BSF    03.5
003B:  BCF    1F.4
003C:  BCF    1F.5
003D:  MOVF   1B,W
003E:  ANDLW  80
003F:  MOVWF  1B
0040:  MOVLW  07
0041:  MOVWF  1C
0042:  BCF    03.7
.................... 	set_tris_B(0x01); // B0 como entrada, B7 como salida 
0043:  MOVLW  01
0044:  MOVWF  06
.................... 	output_low(PIN_B7); // apaga LED 
0045:  BCF    03.5
0046:  BCF    06.7
.................... 	port_b_pullups(TRUE); //pull-up para RB0 
0047:  BSF    03.5
0048:  BCF    01.7
.................... 	enable_interrupts(int_ext); // Habilita int. RB0 
0049:  BCF    03.5
004A:  BSF    0B.4
.................... 	ext_int_edge (L_TO_H); // por flanco de subida 
004B:  BSF    03.5
004C:  BSF    01.6
.................... 	enable_interrupts(GLOBAL); // Habilita int. general 
004D:  MOVLW  C0
004E:  BCF    03.5
004F:  IORWF  0B,F
.................... 	while(1) { // Bucle infinito de espera 
0050:  GOTO   050
.................... 	} 
.................... } 
0051:  SLEEP

Configuration Fuses:
   Word  1: 3F61   NOWDT PUT XT MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
