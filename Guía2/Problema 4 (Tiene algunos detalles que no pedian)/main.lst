CCS PCM C Compiler, Version 5.076, 56587               26-sep.-20 19:49

               Filename:   C:\Users\Francisco\Documents\!Facultad - UF\Electrónica Digital II\Ejercicios\Guía2\Problema 4 (Tiene algunos detalles que no pedian)\main.lst

               ROM used:   100 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           8 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03F
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=4MHz) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................  
....................  
.................... #BYTE TRISA=0x85 
.................... #BYTE PORTA=0x05 
.................... #BYTE TRISB=0x86 
.................... #BYTE PORTB=0x06 
....................  
.................... void ParpadeoInicial(){ 
....................    delay_ms(500); 
0019:  MOVLW  02
001A:  MOVWF  22
001B:  MOVLW  FA
001C:  MOVWF  23
001D:  CALL   004
001E:  DECFSZ 22,F
001F:  GOTO   01B
....................    PORTB=0x00; 
0020:  CLRF   06
....................    delay_ms(300); 
0021:  MOVLW  02
0022:  MOVWF  22
0023:  MOVLW  96
0024:  MOVWF  23
0025:  CALL   004
0026:  DECFSZ 22,F
0027:  GOTO   023
....................    PORTB=0xFF; 
0028:  MOVLW  FF
0029:  MOVWF  06
....................    delay_ms(200); 
002A:  MOVLW  C8
002B:  MOVWF  23
002C:  CALL   004
....................    PORTB=0x00; 
002D:  CLRF   06
....................    delay_ms(200); 
002E:  MOVLW  C8
002F:  MOVWF  23
0030:  CALL   004
....................    PORTB=0xFF; 
0031:  MOVLW  FF
0032:  MOVWF  06
....................    delay_ms(200); 
0033:  MOVLW  C8
0034:  MOVWF  23
0035:  CALL   004
....................    PORTB=0x00; 
0036:  CLRF   06
....................    delay_ms(400); 
0037:  MOVLW  02
0038:  MOVWF  22
0039:  MOVLW  C8
003A:  MOVWF  23
003B:  CALL   004
003C:  DECFSZ 22,F
003D:  GOTO   039
003E:  RETURN
.................... } 
....................  
.................... void main() 
003F:  MOVF   03,W
0040:  ANDLW  1F
0041:  MOVWF  03
0042:  BSF    03.5
0043:  BCF    1F.4
0044:  BCF    1F.5
0045:  MOVF   1B,W
0046:  ANDLW  80
0047:  MOVWF  1B
0048:  MOVLW  07
0049:  MOVWF  1C
004A:  BCF    03.7
.................... { 
....................    TRISA=0xFF; 
004B:  MOVLW  FF
004C:  MOVWF  05
....................    PORTA=0x00; 
004D:  BCF    03.5
004E:  CLRF   05
....................    TRISB=0x00; 
004F:  BSF    03.5
0050:  CLRF   06
....................    PORTB=0xFF; 
0051:  BCF    03.5
0052:  MOVWF  06
....................    unsigned int cont=0; 
0053:  CLRF   21
....................     
....................    ParpadeoInicial(); 
0054:  CALL   019
....................     
....................    while(TRUE) 
....................    { 
....................       if(PORTA==0x01){ 
0055:  DECFSZ 05,W
0056:  GOTO   05E
....................          delay_ms(200); 
0057:  MOVLW  C8
0058:  MOVWF  23
0059:  CALL   004
....................          cont=cont+1; 
005A:  MOVLW  01
005B:  ADDWF  21,F
....................          PORTB=cont; 
005C:  MOVF   21,W
005D:  MOVWF  06
....................       } 
....................       if(cont==255){ 
005E:  INCFSZ 21,W
005F:  GOTO   062
....................          ParpadeoInicial(); 
0060:  CALL   019
....................          cont=0; //No es necesario pero por las dudas, para no perder la costumbre 
0061:  CLRF   21
....................       } 
0062:  GOTO   055
....................    } 
....................  
.................... } 
0063:  SLEEP

Configuration Fuses:
   Word  1: 3F61   NOWDT PUT XT MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
