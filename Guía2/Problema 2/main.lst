CCS PCM C Compiler, Version 5.076, 56587               22-sep.-20 15:26

               Filename:   C:\Users\Francisco\Documents\!Facultad - UF\Electrónica Digital II\Ejercicios\Guía2\Problema 2\main.lst

               ROM used:   56 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=4MHz) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  GOTO   034 (RETURN)
....................  
....................  
....................  
.................... #FUSES NOMCLR 
.................... #BYTE TRISA=0x85 
.................... #BYTE PORTA=0x05 
.................... #BIT RA4=PORTA.4 
....................  
.................... void main() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  BSF    03.5
001E:  BCF    1F.4
001F:  BCF    1F.5
0020:  MOVF   1B,W
0021:  ANDLW  80
0022:  MOVWF  1B
0023:  MOVLW  07
0024:  MOVWF  1C
0025:  BCF    03.7
.................... { 
....................    TRISA=0xEF;//Configuramos el pin RA4 como salida en lugar del RA5 porque RA5 es solo de entrada; 
0026:  MOVLW  EF
0027:  MOVWF  05
....................    PORTA=0x00; 
0028:  BCF    03.5
0029:  CLRF   05
....................    while(1) 
....................    { 
....................       if(bit_test(PORTA,4) == 1) 
002A:  BTFSS  05.4
002B:  GOTO   02E
....................          RA4=0; 
002C:  BCF    05.4
002D:  GOTO   02F
....................       else  
....................          RA4=1; 
002E:  BSF    05.4
....................       delay_ms(500); 
002F:  MOVLW  02
0030:  MOVWF  21
0031:  MOVLW  FA
0032:  MOVWF  22
0033:  GOTO   004
0034:  DECFSZ 21,F
0035:  GOTO   031
0036:  GOTO   02A
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
0037:  SLEEP

Configuration Fuses:
   Word  1: 3F41   NOWDT PUT XT NOMCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
