CCS PCM C Compiler, Version 5.076, 56587               21-sep.-20 15:26

               Filename:   C:\Users\Francisco\Documents\!Facultad - UF\Electrónica Digital II\Ejercicios\Ejercicios por mi cuenta\Problema 5 guia 2\main.lst

               ROM used:   90 words (2%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           18 (5%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=4MHz) 
0004:  MOVLW  2D
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  GOTO   04A (RETURN)
....................  
....................  
....................  
.................... #BYTE TRISA=0x85 
.................... #BYTE PORTA=0x05 
.................... #BYTE TRISB=0x86 
.................... #BYTE PORTB=0x06 
.................... #BIT RA0=PORTA.0 
....................  
.................... void main() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  BSF    03.5
001E:  BCF    1F.4
001F:  BCF    1F.5
0020:  MOVF   1B,W
0021:  ANDLW  80
0022:  MOVWF  1B
0023:  MOVLW  07
0024:  MOVWF  1C
0025:  BCF    03.7
.................... { 
....................    TRISA=0xFF; 
0026:  MOVLW  FF
0027:  MOVWF  05
....................    PORTA=0x00; 
0028:  BCF    03.5
0029:  CLRF   05
....................    TRISB=0x00; 
002A:  BSF    03.5
002B:  CLRF   06
....................    PORTB=0x00; 
002C:  BCF    03.5
002D:  CLRF   06
....................    unsigned int cont=0; 
....................    int v[10]={63,6,91,79,102,109,125,7,127,103}; 
002E:  CLRF   21
002F:  MOVLW  3F
0030:  MOVWF  22
0031:  MOVLW  06
0032:  MOVWF  23
0033:  MOVLW  5B
0034:  MOVWF  24
0035:  MOVLW  4F
0036:  MOVWF  25
0037:  MOVLW  66
0038:  MOVWF  26
0039:  MOVLW  6D
003A:  MOVWF  27
003B:  MOVLW  7D
003C:  MOVWF  28
003D:  MOVLW  07
003E:  MOVWF  29
003F:  MOVLW  7F
0040:  MOVWF  2A
0041:  MOVLW  67
0042:  MOVWF  2B
....................     
....................    while(TRUE) 
....................    { 
....................       if(RA0==0){ 
0043:  BTFSC  05.0
0044:  GOTO   052
....................          delay_ms(300); 
0045:  MOVLW  02
0046:  MOVWF  2C
0047:  MOVLW  96
0048:  MOVWF  2D
0049:  GOTO   004
004A:  DECFSZ 2C,F
004B:  GOTO   047
....................          cont=cont+1; 
004C:  MOVLW  01
004D:  ADDWF  21,F
....................          if(cont>9) 
004E:  MOVF   21,W
004F:  SUBLW  09
0050:  BTFSS  03.0
....................             cont=0; 
0051:  CLRF   21
....................       } 
....................       PORTB=v[cont]; 
0052:  MOVLW  22
0053:  ADDWF  21,W
0054:  MOVWF  04
0055:  BCF    03.7
0056:  MOVF   00,W
0057:  MOVWF  06
0058:  GOTO   043
....................    } 
....................  
.................... } 
0059:  SLEEP

Configuration Fuses:
   Word  1: 3F61   NOWDT PUT XT MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
