CCS PCM C Compiler, Version 5.076, 56587               20-Oct-20 16:03

               Filename:   D:\Ezequiel\My eBooks\Favaloro\ED\II\GUIA 5\EX2\TX\main.lst

               ROM used:   110 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   026
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #include <16f88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #fuses hs, nowdt, noprotect, noput 
.................... #use delay(clock=4M) 
.................... #use RS232(baud=9600, xmit=pin_b5, bits=8, parity=N) 
0004:  BSF    03.5
0005:  BCF    06.5
0006:  BCF    03.5
0007:  BCF    06.5
0008:  MOVLW  08
0009:  MOVWF  78
000A:  GOTO   00B
000B:  NOP
000C:  BSF    78.7
000D:  GOTO   01C
000E:  BCF    78.7
000F:  RRF    21,F
0010:  BTFSC  03.0
0011:  BSF    06.5
0012:  BTFSS  03.0
0013:  BCF    06.5
0014:  BSF    78.6
0015:  GOTO   01C
0016:  BCF    78.6
0017:  DECFSZ 78,F
0018:  GOTO   00F
0019:  GOTO   01A
001A:  NOP
001B:  BSF    06.5
001C:  MOVLW  1C
001D:  MOVWF  04
001E:  DECFSZ 04,F
001F:  GOTO   01E
0020:  GOTO   021
0021:  BTFSC  78.7
0022:  GOTO   00E
0023:  BTFSC  78.6
0024:  GOTO   016
0025:  RETURN
.................... #use standard_io(b) 
....................  
.................... void main(){ 
0026:  MOVF   03,W
0027:  ANDLW  1F
0028:  MOVWF  03
0029:  BSF    03.5
002A:  BCF    06.5
002B:  BCF    03.5
002C:  BSF    06.5
002D:  BSF    03.5
002E:  BCF    1F.4
002F:  BCF    1F.5
0030:  MOVF   1B,W
0031:  ANDLW  80
0032:  MOVWF  1B
0033:  MOVLW  07
0034:  MOVWF  1C
0035:  BCF    03.7
....................     set_tris_a(0b11111111); 
0036:  MOVLW  FF
0037:  MOVWF  05
....................     while(TRUE){ 
....................         if(input(pin_a0)==0){ 
0038:  BSF    05.0
0039:  BCF    03.5
003A:  BTFSC  05.0
003B:  GOTO   044
....................             putc('1'); 
003C:  MOVLW  31
003D:  MOVWF  21
003E:  CALL   004
....................             while(input(pin_a0)==0); 
003F:  BSF    03.5
0040:  BSF    05.0
0041:  BCF    03.5
0042:  BTFSS  05.0
0043:  GOTO   03F
....................         } 
....................         if(input(pin_a1)==0){ 
0044:  BSF    03.5
0045:  BSF    05.1
0046:  BCF    03.5
0047:  BTFSC  05.1
0048:  GOTO   051
....................             putc('2'); 
0049:  MOVLW  32
004A:  MOVWF  21
004B:  CALL   004
....................             while(input(pin_a1)==0); 
004C:  BSF    03.5
004D:  BSF    05.1
004E:  BCF    03.5
004F:  BTFSS  05.1
0050:  GOTO   04C
....................         } 
....................         if(input(pin_a2)==0){ 
0051:  BSF    03.5
0052:  BSF    05.2
0053:  BCF    03.5
0054:  BTFSC  05.2
0055:  GOTO   05E
....................             putc('3'); 
0056:  MOVLW  33
0057:  MOVWF  21
0058:  CALL   004
....................             while(input(pin_a2)==0); 
0059:  BSF    03.5
005A:  BSF    05.2
005B:  BCF    03.5
005C:  BTFSS  05.2
005D:  GOTO   059
....................         } 
....................         if(input(pin_a3)==0){ 
005E:  BSF    03.5
005F:  BSF    05.3
0060:  BCF    03.5
0061:  BTFSC  05.3
0062:  GOTO   06B
....................             putc('4'); 
0063:  MOVLW  34
0064:  MOVWF  21
0065:  CALL   004
....................             while(input(pin_a3)==0); 
0066:  BSF    03.5
0067:  BSF    05.3
0068:  BCF    03.5
0069:  BTFSS  05.3
006A:  GOTO   066
....................         } 
006B:  BSF    03.5
006C:  GOTO   038
....................     } 
.................... } 
006D:  SLEEP

Configuration Fuses:
   Word  1: 3F6A   NOWDT NOPUT HS MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
